# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: streamcount.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='streamcount.proto',
  package='streamcount',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x11streamcount.proto\x12\x0bstreamcount\"\x1c\n\x0c\x43ountRequest\x12\x0c\n\x04user\x18\x01 \x01(\t\"\x1b\n\nCountReply\x12\r\n\x05\x63ount\x18\x01 \x01(\r2P\n\rStreamCounter\x12?\n\x05\x43ount\x12\x19.streamcount.CountRequest\x1a\x17.streamcount.CountReply\"\x00(\x01\x62\x06proto3'
)




_COUNTREQUEST = _descriptor.Descriptor(
  name='CountRequest',
  full_name='streamcount.CountRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='user', full_name='streamcount.CountRequest.user', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=62,
)


_COUNTREPLY = _descriptor.Descriptor(
  name='CountReply',
  full_name='streamcount.CountReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='count', full_name='streamcount.CountReply.count', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=64,
  serialized_end=91,
)

DESCRIPTOR.message_types_by_name['CountRequest'] = _COUNTREQUEST
DESCRIPTOR.message_types_by_name['CountReply'] = _COUNTREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CountRequest = _reflection.GeneratedProtocolMessageType('CountRequest', (_message.Message,), {
  'DESCRIPTOR' : _COUNTREQUEST,
  '__module__' : 'streamcount_pb2'
  # @@protoc_insertion_point(class_scope:streamcount.CountRequest)
  })
_sym_db.RegisterMessage(CountRequest)

CountReply = _reflection.GeneratedProtocolMessageType('CountReply', (_message.Message,), {
  'DESCRIPTOR' : _COUNTREPLY,
  '__module__' : 'streamcount_pb2'
  # @@protoc_insertion_point(class_scope:streamcount.CountReply)
  })
_sym_db.RegisterMessage(CountReply)



_STREAMCOUNTER = _descriptor.ServiceDescriptor(
  name='StreamCounter',
  full_name='streamcount.StreamCounter',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=93,
  serialized_end=173,
  methods=[
  _descriptor.MethodDescriptor(
    name='Count',
    full_name='streamcount.StreamCounter.Count',
    index=0,
    containing_service=None,
    input_type=_COUNTREQUEST,
    output_type=_COUNTREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_STREAMCOUNTER)

DESCRIPTOR.services_by_name['StreamCounter'] = _STREAMCOUNTER

# @@protoc_insertion_point(module_scope)
